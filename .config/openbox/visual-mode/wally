#!/usr/bin/env bash
export LC_ALL=POSIX LANG=POSIX; . "${HOME}/.owl4ce_var"

get_size()
{
    SIZE="$(identify -format '%w' "$RAW")"
    if [ "$SIZE" -lt 1280 ]; then
        echo ''
    elif [ "$SIZE" -lt 1920 ]; then
        echo '_HD'
    elif [ "$SIZE" -lt 2048 ]; then
        echo '_FHD'
    elif [ "$SIZE" -lt 2880 ]; then
        echo '_2K'
    elif [ "$SIZE" -lt 3840 ]; then
        echo '_3K'
    elif [ "$SIZE" -lt 5120 ]; then
        echo '_4K'
    elif [ "$SIZE" -lt 6144 ]; then
        echo '_5K'
    elif [ "$SIZE" -lt 7168 ]; then
        echo '_6K'
    elif [ "$SIZE" -lt 7680 ]; then
        echo '_7K'
    elif [ "$SIZE" -eq 7680 ]; then
        echo '_8K'
    else
        echo '_ULTRA'
    fi
}

case ${1} in
    generate) type -p identify convert &>/dev/null || exec "$EXNOTIFY_SEND" -u low -r 17 'Install imagemagick!'
              cd "$WALL_RAW_SOURCE"
              for RAW in ./*.*; do
                  if [ "$RAW" = './*.*' ]; then
                      exec "$EXNOTIFY_SEND" -u low -r 999 -i "$NOTIF_WALLY_ICON" '' 'Nothing will be generated!'
                  fi
                  "$EXNOTIFY_SEND" -r 999 -t 1000 -i "$NOTIF_WALLY_ICON" '' "Generating ..\n<span size='small'><u>$(grep -oE '[^/]+$' <<< "$RAW")</u></span>"
                  if [ "$CHK_VISMOD" = 'mechanical' ]; then
                      convert "$RAW" -gravity center -crop 16:9 \( +clone -fill '#4c566a' -colorize 50% \) -gravity center   \
                      -compose lighten -composite \( +clone -fill '#4c566a' -colorize 20% \) -gravity center -compose darken \
                      -composite -quality 100% "${WALL_DIR}/$(grep -oP './\K[^.]+' <<< "$RAW")$(get_size).jpg" &>/dev/null
                  elif [ "$CHK_VISMOD" = 'eyecandy' ]; then
                      convert "$RAW" -gravity center -crop 16:9 \( +clone -fill white -colorize 20% -modulate 100,127,97 \)  \
                      -fill black -colorize 2.2% -gravity center -compose lighten -composite -quality 100%                   \
                      "${WALL_DIR}/$(grep -oP './\K[^.]+' <<< "$RAW")$(get_size).jpg" &>/dev/null
                  fi
                  exec "$EXNOTIFY_SEND" -u low -r 999 -i "$NOTIF_WALLY_ICON" '' 'Successfuly generated'
              done
    ;;
    *)        RB='\e[5;31m' GB='\e[5;32m' Y='\e[1;33m' M='\e[1;35m' C='\e[1;36m' W='\e[1;37m' NC='\e[0m' CL='\ec' r='\e[0;31m'
              GUESS_MODE="$([ -z "$CHK_MINMOD" ] || sed 's/.*/\u&/' <<< "${CHK_MINMOD} ")$(sed 's/.*/\u&/' <<< "$CHK_VISMOD")"
              printf "${CL}${C}-${GB}-${NC}${C}- ${W}Select wallpaper for ${GUESS_MODE} Theme\n"
              for image in "$WALL_DIR"/*.*; do
                  N="$((${N:-0}+1))"
                  printf "${M}[${NC}${N}${M}] ${r}$(grep -oE '[^/]+$' <<< "$image")\n"
                  eval "image${N}=\$image"
              done
              printf "${C}-${GB}-${NC}${C}- ${W}Enter File Index ID ${M}[${NC}1-${N}${M}]${W}: ${NC}"
              read -r NUM; NUM="$(tr -dc '[:digit:]' <<< "$NUM")"
              if [[ "$NUM" -eq 0 || "$NUM" -gt "$N" ]]; then
                  printf "${Y}[${RB}!${NC}${Y}] ${RB}Wrong selection\n" >&2
                  exit 1
              else
                  eval "IMG=\$image${NUM}"
                  nitrogen --set-zoom-fill --save "$IMG" &>/dev/null || exit 1
                  SELECTED="$(grep -oE '[^/]+$' <<< "$IMG")"
                  echo "$SELECTED" > "$([ -n "$CHK_MINMOD" ] && echo "$MINMOD_WALL_FILE" || echo "$VISMOD_WALL_FILE")"
                  printf "${C}[${GB}√${NC}${C}] ${W}Selected wallpaper: ${r}${SELECTED}\n"
                  "$EXNOTIFY_SEND" -u low -r 99 -i "$NOTIF_WALLY_ICON" '' "<span size='small'><u>${SELECTED}</u></span>\nSuccessfully applied"
              fi
    ;;
esac

exit ${?}
